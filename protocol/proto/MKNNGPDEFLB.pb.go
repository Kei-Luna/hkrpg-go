// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.0
// source: MKNNGPDEFLB.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MKNNGPDEFLB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RogueBuffInfo   *RogueTournBuffInfo    `protobuf:"bytes,2,opt,name=rogue_buff_info,json=rogueBuffInfo,proto3" json:"rogue_buff_info,omitempty"`
	GameMiracleInfo *ChessRogueMiracleInfo `protobuf:"bytes,11,opt,name=game_miracle_info,json=gameMiracleInfo,proto3" json:"game_miracle_info,omitempty"`
	HCIBEJEDJFN     *RogueTournValuesItem  `protobuf:"bytes,5,opt,name=HCIBEJEDJFN,proto3" json:"HCIBEJEDJFN,omitempty"`
	RogueAeonInfo   *JNAMPABDKIH           `protobuf:"bytes,12,opt,name=rogue_aeon_info,json=rogueAeonInfo,proto3" json:"rogue_aeon_info,omitempty"`
	EBABEFMHIIJ     *EFHDBCOONFM           `protobuf:"bytes,13,opt,name=EBABEFMHIIJ,proto3" json:"EBABEFMHIIJ,omitempty"`
	EHKOPLOGIGG     *RogueTournFormulaInfo `protobuf:"bytes,14,opt,name=EHKOPLOGIGG,proto3" json:"EHKOPLOGIGG,omitempty"`
	FOFLEHJMPOM     *KeywordUnlockInfo     `protobuf:"bytes,15,opt,name=FOFLEHJMPOM,proto3" json:"FOFLEHJMPOM,omitempty"`
	RogueLineupInfo *RogueTournVirtualItem `protobuf:"bytes,8,opt,name=rogue_lineup_info,json=rogueLineupInfo,proto3" json:"rogue_lineup_info,omitempty"`
}

func (x *MKNNGPDEFLB) Reset() {
	*x = MKNNGPDEFLB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MKNNGPDEFLB_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MKNNGPDEFLB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MKNNGPDEFLB) ProtoMessage() {}

func (x *MKNNGPDEFLB) ProtoReflect() protoreflect.Message {
	mi := &file_MKNNGPDEFLB_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MKNNGPDEFLB.ProtoReflect.Descriptor instead.
func (*MKNNGPDEFLB) Descriptor() ([]byte, []int) {
	return file_MKNNGPDEFLB_proto_rawDescGZIP(), []int{0}
}

func (x *MKNNGPDEFLB) GetRogueBuffInfo() *RogueTournBuffInfo {
	if x != nil {
		return x.RogueBuffInfo
	}
	return nil
}

func (x *MKNNGPDEFLB) GetGameMiracleInfo() *ChessRogueMiracleInfo {
	if x != nil {
		return x.GameMiracleInfo
	}
	return nil
}

func (x *MKNNGPDEFLB) GetHCIBEJEDJFN() *RogueTournValuesItem {
	if x != nil {
		return x.HCIBEJEDJFN
	}
	return nil
}

func (x *MKNNGPDEFLB) GetRogueAeonInfo() *JNAMPABDKIH {
	if x != nil {
		return x.RogueAeonInfo
	}
	return nil
}

func (x *MKNNGPDEFLB) GetEBABEFMHIIJ() *EFHDBCOONFM {
	if x != nil {
		return x.EBABEFMHIIJ
	}
	return nil
}

func (x *MKNNGPDEFLB) GetEHKOPLOGIGG() *RogueTournFormulaInfo {
	if x != nil {
		return x.EHKOPLOGIGG
	}
	return nil
}

func (x *MKNNGPDEFLB) GetFOFLEHJMPOM() *KeywordUnlockInfo {
	if x != nil {
		return x.FOFLEHJMPOM
	}
	return nil
}

func (x *MKNNGPDEFLB) GetRogueLineupInfo() *RogueTournVirtualItem {
	if x != nil {
		return x.RogueLineupInfo
	}
	return nil
}

var File_MKNNGPDEFLB_proto protoreflect.FileDescriptor

var file_MKNNGPDEFLB_proto_rawDesc = []byte{
	0x0a, 0x11, 0x4d, 0x4b, 0x4e, 0x4e, 0x47, 0x50, 0x44, 0x45, 0x46, 0x4c, 0x42, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x46,
	0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x18, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x42, 0x75, 0x66, 0x66,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x45, 0x46, 0x48, 0x44,
	0x42, 0x43, 0x4f, 0x4f, 0x4e, 0x46, 0x4d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x52, 0x6f, 0x67, 0x75,
	0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x49, 0x74, 0x65, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x4a, 0x4e,
	0x41, 0x4d, 0x50, 0x41, 0x42, 0x44, 0x4b, 0x49, 0x48, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xe1, 0x03, 0x0a, 0x0b, 0x4d, 0x4b, 0x4e, 0x4e, 0x47, 0x50, 0x44, 0x45, 0x46, 0x4c, 0x42, 0x12,
	0x3b, 0x0a, 0x0f, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65,
	0x54, 0x6f, 0x75, 0x72, 0x6e, 0x42, 0x75, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x72,
	0x6f, 0x67, 0x75, 0x65, 0x42, 0x75, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x11,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x43, 0x68, 0x65, 0x73, 0x73, 0x52,
	0x6f, 0x67, 0x75, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0f, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x69, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x37, 0x0a, 0x0b, 0x48, 0x43, 0x49, 0x42, 0x45, 0x4a, 0x45, 0x44, 0x4a, 0x46, 0x4e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x54, 0x6f, 0x75,
	0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x48, 0x43,
	0x49, 0x42, 0x45, 0x4a, 0x45, 0x44, 0x4a, 0x46, 0x4e, 0x12, 0x34, 0x0a, 0x0f, 0x72, 0x6f, 0x67,
	0x75, 0x65, 0x5f, 0x61, 0x65, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4a, 0x4e, 0x41, 0x4d, 0x50, 0x41, 0x42, 0x44, 0x4b, 0x49, 0x48,
	0x52, 0x0d, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x41, 0x65, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2e, 0x0a, 0x0b, 0x45, 0x42, 0x41, 0x42, 0x45, 0x46, 0x4d, 0x48, 0x49, 0x49, 0x4a, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x45, 0x46, 0x48, 0x44, 0x42, 0x43, 0x4f, 0x4f, 0x4e,
	0x46, 0x4d, 0x52, 0x0b, 0x45, 0x42, 0x41, 0x42, 0x45, 0x46, 0x4d, 0x48, 0x49, 0x49, 0x4a, 0x12,
	0x38, 0x0a, 0x0b, 0x45, 0x48, 0x4b, 0x4f, 0x50, 0x4c, 0x4f, 0x47, 0x49, 0x47, 0x47, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x52, 0x6f, 0x67, 0x75, 0x65, 0x54, 0x6f, 0x75, 0x72,
	0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x45, 0x48,
	0x4b, 0x4f, 0x50, 0x4c, 0x4f, 0x47, 0x49, 0x47, 0x47, 0x12, 0x34, 0x0a, 0x0b, 0x46, 0x4f, 0x46,
	0x4c, 0x45, 0x48, 0x4a, 0x4d, 0x50, 0x4f, 0x4d, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x46, 0x4f, 0x46, 0x4c, 0x45, 0x48, 0x4a, 0x4d, 0x50, 0x4f, 0x4d, 0x12,
	0x42, 0x0a, 0x11, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x52, 0x6f, 0x67,
	0x75, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x6e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0f, 0x72, 0x6f, 0x67, 0x75, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x28, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xaa,
	0x02, 0x1b, 0x45, 0x67, 0x67, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x6e, 0x68, 0x65, 0x6e,
	0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_MKNNGPDEFLB_proto_rawDescOnce sync.Once
	file_MKNNGPDEFLB_proto_rawDescData = file_MKNNGPDEFLB_proto_rawDesc
)

func file_MKNNGPDEFLB_proto_rawDescGZIP() []byte {
	file_MKNNGPDEFLB_proto_rawDescOnce.Do(func() {
		file_MKNNGPDEFLB_proto_rawDescData = protoimpl.X.CompressGZIP(file_MKNNGPDEFLB_proto_rawDescData)
	})
	return file_MKNNGPDEFLB_proto_rawDescData
}

var file_MKNNGPDEFLB_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_MKNNGPDEFLB_proto_goTypes = []interface{}{
	(*MKNNGPDEFLB)(nil),           // 0: MKNNGPDEFLB
	(*RogueTournBuffInfo)(nil),    // 1: RogueTournBuffInfo
	(*ChessRogueMiracleInfo)(nil), // 2: ChessRogueMiracleInfo
	(*RogueTournValuesItem)(nil),  // 3: RogueTournValuesItem
	(*JNAMPABDKIH)(nil),           // 4: JNAMPABDKIH
	(*EFHDBCOONFM)(nil),           // 5: EFHDBCOONFM
	(*RogueTournFormulaInfo)(nil), // 6: RogueTournFormulaInfo
	(*KeywordUnlockInfo)(nil),     // 7: KeywordUnlockInfo
	(*RogueTournVirtualItem)(nil), // 8: RogueTournVirtualItem
}
var file_MKNNGPDEFLB_proto_depIdxs = []int32{
	1, // 0: MKNNGPDEFLB.rogue_buff_info:type_name -> RogueTournBuffInfo
	2, // 1: MKNNGPDEFLB.game_miracle_info:type_name -> ChessRogueMiracleInfo
	3, // 2: MKNNGPDEFLB.HCIBEJEDJFN:type_name -> RogueTournValuesItem
	4, // 3: MKNNGPDEFLB.rogue_aeon_info:type_name -> JNAMPABDKIH
	5, // 4: MKNNGPDEFLB.EBABEFMHIIJ:type_name -> EFHDBCOONFM
	6, // 5: MKNNGPDEFLB.EHKOPLOGIGG:type_name -> RogueTournFormulaInfo
	7, // 6: MKNNGPDEFLB.FOFLEHJMPOM:type_name -> KeywordUnlockInfo
	8, // 7: MKNNGPDEFLB.rogue_lineup_info:type_name -> RogueTournVirtualItem
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_MKNNGPDEFLB_proto_init() }
func file_MKNNGPDEFLB_proto_init() {
	if File_MKNNGPDEFLB_proto != nil {
		return
	}
	file_RogueTournFormulaInfo_proto_init()
	file_RogueTournBuffInfo_proto_init()
	file_EFHDBCOONFM_proto_init()
	file_RogueTournVirtualItem_proto_init()
	file_RogueTournValuesItem_proto_init()
	file_KeywordUnlockInfo_proto_init()
	file_ChessRogueMiracleInfo_proto_init()
	file_JNAMPABDKIH_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_MKNNGPDEFLB_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MKNNGPDEFLB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_MKNNGPDEFLB_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_MKNNGPDEFLB_proto_goTypes,
		DependencyIndexes: file_MKNNGPDEFLB_proto_depIdxs,
		MessageInfos:      file_MKNNGPDEFLB_proto_msgTypes,
	}.Build()
	File_MKNNGPDEFLB_proto = out.File
	file_MKNNGPDEFLB_proto_rawDesc = nil
	file_MKNNGPDEFLB_proto_goTypes = nil
	file_MKNNGPDEFLB_proto_depIdxs = nil
}
